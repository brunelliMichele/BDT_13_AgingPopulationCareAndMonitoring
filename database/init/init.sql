BEGIN;

CREATE TABLE ORGANIZATIONS (
    ID UUID PRIMARY KEY,
    NAME VARCHAR NOT NULL,
    ADDRESS VARCHAR NOT NULL,
    CITY VARCHAR NOT NULL,
    STATE VARCHAR,
    ZIP VARCHAR,
    LAT NUMERIC,
    LON NUMERIC,
    PHONE VARCHAR,
    REVENUE NUMERIC NOT NULL,
    UTILIZATION NUMERIC NOT NULL
);

-- Create tables
CREATE TABLE PATIENTS (
    ID UUID PRIMARY KEY,
    BIRTHDATE DATE NOT NULL,
    DEATHDATE DATE,
    SSN VARCHAR NOT NULL,
    DRIVERS VARCHAR,
    PASSPORT VARCHAR,
    PREFIX VARCHAR,
    FIRST VARCHAR NOT NULL,
    MIDDLE VARCHAR,
    LAST VARCHAR NOT NULL,
    SUFFIX VARCHAR,
    MAIDEN VARCHAR,
    MARITAL VARCHAR,
    RACE VARCHAR NOT NULL,
    ETHNICITY VARCHAR NOT NULL,
    GENDER VARCHAR NOT NULL,
    BIRTHPLACE VARCHAR NOT NULL,
    ADDRESS VARCHAR NOT NULL,
    CITY VARCHAR NOT NULL,
    STATE VARCHAR NOT NULL,
    COUNTY VARCHAR,
    FIPS_COUNTY_CODE VARCHAR,
    ZIP VARCHAR,
    LAT NUMERIC,
    LON NUMERIC,
    HEALTHCARE_EXPENSES NUMERIC NOT NULL,
    HEALTHCARE_COVERAGE NUMERIC NOT NULL,
    INCOME NUMERIC NOT NULL
);

CREATE TABLE PROVIDERS (
    ID UUID PRIMARY KEY,
    ORGANIZATION UUID NOT NULL REFERENCES ORGANIZATIONS(ID),
    NAME VARCHAR NOT NULL,
    GENDER VARCHAR NOT NULL,
    SPECIALITY VARCHAR NOT NULL,
    ADDRESS VARCHAR NOT NULL,
    CITY VARCHAR NOT NULL,
    STATE VARCHAR,
    ZIP VARCHAR,
    LAT NUMERIC,
    LON NUMERIC,
    ENCOUNTERS NUMERIC NOT NULL,
    PROCEDURES NUMERIC NOT NULL
);

CREATE TABLE PAYERS (
    ID UUID PRIMARY KEY,
    NAME VARCHAR NOT NULL,
    OWNERSHIP VARCHAR,
    ADDRESS VARCHAR,
    CITY VARCHAR,
    STATE_HEADQUARTERED VARCHAR,
    ZIP VARCHAR,
    PHONE VARCHAR,
    AMOUNT_COVERED NUMERIC NOT NULL,
    AMOUNT_UNCOVERED NUMERIC NOT NULL,
    REVENUE NUMERIC NOT NULL,
    COVERED_ENCOUNTERS NUMERIC NOT NULL,
    UNCOVERED_ENCOUNTERS NUMERIC NOT NULL,
    COVERED_MEDICATIONS NUMERIC NOT NULL,
    UNCOVERED_MEDICATIONS NUMERIC NOT NULL,
    COVERED_PROCEDURES NUMERIC NOT NULL,
    UNCOVERED_PROCEDURES NUMERIC NOT NULL,
    COVERED_IMMUNIZATIONS NUMERIC NOT NULL,
    UNCOVERED_IMMUNIZATIONS NUMERIC NOT NULL,
    UNIQUE_CUSTOMERS NUMERIC NOT NULL,
    QOLS_AVG NUMERIC NOT NULL,
    MEMBER_MONTHS NUMERIC NOT NULL
);

CREATE TABLE ENCOUNTERS (
    ID UUID PRIMARY KEY,
    START TIMESTAMP NOT NULL,
    STOP TIMESTAMP,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ORGANIZATION UUID NOT NULL REFERENCES ORGANIZATIONS(ID),
    PROVIDER UUID NOT NULL REFERENCES PROVIDERS(ID),
    PAYER UUID NOT NULL REFERENCES PAYERS(ID),
    ENCOUNTERCLASS VARCHAR NOT NULL,
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    BASE_ENCOUNTER_COST NUMERIC NOT NULL,
    TOTAL_CLAIM_COST NUMERIC NOT NULL,
    PAYER_COVERAGE NUMERIC NOT NULL,
    REASONCODE VARCHAR,
    REASONDESCRIPTION VARCHAR
);

-- Tables without explicit primary keys (PKs may need to be added in practice)
CREATE TABLE ALLERGIES (
    START DATE NOT NULL,
    STOP DATE,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    SYSTEM VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    TYPE VARCHAR,
    CATEGORY VARCHAR,
    REACTION1 VARCHAR,
    DESCRIPTION1 VARCHAR,
    SEVERITY1 VARCHAR,
    REACTION2 VARCHAR,
    DESCRIPTION2 VARCHAR,
    SEVERITY2 VARCHAR
);

CREATE TABLE CAREPLANS (
    ID UUID PRIMARY KEY,
    START DATE NOT NULL,
    STOP DATE,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    REASONCODE VARCHAR,
    REASONDESCRIPTION VARCHAR
);

CREATE TABLE CLAIMS (
    ID UUID PRIMARY KEY,
    PATIENT_ID UUID NOT NULL REFERENCES PATIENTS(ID),
    PROVIDER_ID UUID NOT NULL REFERENCES PROVIDERS(ID),
    PRIMARY_PATIENT_INSURANCE_ID UUID REFERENCES PAYERS(ID),
    SECONDARY_PATIENT_INSURANCE_ID UUID REFERENCES PAYERS(ID),
    DEPARTMENT_ID NUMERIC NOT NULL,
    PATIENT_DEPARTMENT_ID NUMERIC NOT NULL,
    DIAGNOSIS1 VARCHAR,
    DIAGNOSIS2 VARCHAR,
    DIAGNOSIS3 VARCHAR,
    DIAGNOSIS4 VARCHAR,
    DIAGNOSIS5 VARCHAR,
    DIAGNOSIS6 VARCHAR,
    DIAGNOSIS7 VARCHAR,
    DIAGNOSIS8 VARCHAR,
    REFERRING_PROVIDER_ID UUID REFERENCES PROVIDERS(ID),
    APPOINTMENT_ID UUID REFERENCES ENCOUNTERS(ID),
    CURRENT_ILLNESS_DATE TIMESTAMP NOT NULL,
    SERVICE_DATE TIMESTAMP NOT NULL,
    SUPERVISING_PROVIDER_ID UUID REFERENCES PROVIDERS(ID),
    STATUS1 VARCHAR,
    STATUS2 VARCHAR,
    STATUSP VARCHAR,
    OUTSTANDING1 NUMERIC,
    OUTSTANDING2 NUMERIC,
    OUTSTANDINGP NUMERIC,
    LASTBILLEDDATE1 TIMESTAMP,
    LASTBILLEDDATE2 TIMESTAMP,
    LASTBILLEDDATEP TIMESTAMP,
    HEALTHCARECLAIMTYPEID1 NUMERIC,
    HEALTHCARECLAIMTYPEID2 NUMERIC
);

/*
CREATE TABLE PAYER_TRANSITIONS (
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    MEMBER_ID UUID,
    START_YEAR INTEGER NOT NULL,
    END_YEAR INTEGER NOT NULL,
    PAYER UUID NOT NULL REFERENCES PAYERS(ID),
    SECONDARY_PAYER UUID REFERENCES PAYERS(ID),
    OWNERSHIP VARCHAR,
    OWNER_NAME VARCHAR
);


CREATE TABLE CLAIMS_TRANSACTIONS (
    ID UUID PRIMARY KEY,
    CLAIM_ID UUID NOT NULL REFERENCES CLAIMS(ID),
    CHARGE_ID NUMERIC NOT NULL,
    PATIENT_ID UUID NOT NULL REFERENCES PATIENTS(ID),
    TYPE VARCHAR NOT NULL,
    AMOUNT NUMERIC,
    METHOD VARCHAR,
    FROM_DATE TIMESTAMP,
    TO_DATE TIMESTAMP,
    PLACE_OF_SERVICE UUID NOT NULL REFERENCES ORGANIZATIONS(ID),
    PROCEDURE_CODE VARCHAR NOT NULL,
    MODIFIER1 VARCHAR,
    MODIFIER2 VARCHAR,
    DIAGNOSISREF1 NUMERIC,
    DIAGNOSISREF2 NUMERIC,
    DIAGNOSISREF3 NUMERIC,
    DIAGNOSISREF4 NUMERIC,
    UNITS NUMERIC,
    DEPARTMENT_ID NUMERIC,
    NOTES VARCHAR,
    UNIT_AMOUNT NUMERIC,
    TRANSFER_OUT_ID NUMERIC,
    TRANSFER_TYPE VARCHAR,
    PAYMENTS NUMERIC,
    ADJUSTMENTS NUMERIC,
    TRANSFERS NUMERIC,
    OUTSTANDING NUMERIC,
    APPOINTMENT_ID UUID REFERENCES ENCOUNTERS(ID),
    LINE_NOTE VARCHAR,
    PATIENT_INSURANCE_ID UUID REFERENCES PAYER_TRANSITIONS(MEMBER_ID),
    FEE_SCHEDULE_ID NUMERIC,
    PROVIDER_ID UUID NOT NULL REFERENCES PROVIDERS(ID),
    SUPERVISING_PROVIDER_ID UUID REFERENCES PROVIDERS(ID)
);
*/

CREATE TABLE CONDITIONS (
    START DATE NOT NULL,
    STOP DATE,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    SYSTEM VARCHAR NOT NULL,
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL
);

CREATE TABLE DEVICES (
    START TIMESTAMP NOT NULL,
    STOP TIMESTAMP,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    UDI VARCHAR NOT NULL
);

CREATE TABLE IMAGING_STUDIES (
    ID UUID NOT NULL,
    DATE TIMESTAMP NOT NULL,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    SERIES_UID VARCHAR NOT NULL,
    BODY_SITE_CODE VARCHAR NOT NULL,
    BODY_SITE_DESCRIPTION VARCHAR NOT NULL,
    MODALITY_CODE VARCHAR NOT NULL,
    MODALITY_DESCRIPTION VARCHAR NOT NULL,
    INSTANCE_UID VARCHAR NOT NULL,
    SOP_CODE VARCHAR NOT NULL,
    SOP_DESCRIPTION VARCHAR NOT NULL,
    PROCEDURE_CODE VARCHAR NOT NULL
);

CREATE TABLE IMMUNIZATIONS (
    DATE TIMESTAMP NOT NULL,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    COST NUMERIC NOT NULL
);

CREATE TABLE MEDICATIONS (
    START TIMESTAMP NOT NULL,
    STOP TIMESTAMP,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    PAYER UUID NOT NULL REFERENCES PAYERS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    BASE_COST NUMERIC NOT NULL,
    PAYER_COVERAGE NUMERIC NOT NULL,
    DISPENSES NUMERIC NOT NULL,
    TOTALCOST NUMERIC NOT NULL,
    REASONCODE VARCHAR,
    REASONDESCRIPTION VARCHAR
);

CREATE TABLE OBSERVATIONS (
    DATE TIMESTAMP NOT NULL,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID REFERENCES ENCOUNTERS(ID),
    CATEGORY VARCHAR,
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    VALUE VARCHAR NOT NULL,
    UNITS VARCHAR,
    TYPE VARCHAR NOT NULL
);



CREATE TABLE PROCEDURES (
    START TIMESTAMP NOT NULL,
    STOP TIMESTAMP,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    SYSTEM VARCHAR NOT NULL,
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    BASE_COST NUMERIC NOT NULL,
    REASONCODE VARCHAR,
    REASONDESCRIPTION VARCHAR
);

CREATE TABLE SUPPLIES (
    DATE DATE NOT NULL,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    QUANTITY NUMERIC NOT NULL
);

-- Import data in dependency order
COPY PATIENTS FROM '/data/patients.csv' WITH (FORMAT CSV, HEADER);
COPY ORGANIZATIONS FROM '/data/organizations.csv' WITH (FORMAT CSV, HEADER);
COPY PROVIDERS FROM '/data/providers.csv' WITH (FORMAT CSV, HEADER);
COPY PAYERS FROM '/data/payers.csv' WITH (FORMAT CSV, HEADER);
COPY ENCOUNTERS FROM '/data/encounters.csv' WITH (FORMAT CSV, HEADER);
--COPY PAYER_TRANSITIONS FROM '/data/payer_transitions.csv' WITH (FORMAT CSV, HEADER);
COPY ALLERGIES FROM '/data/allergies.csv' WITH (FORMAT CSV, HEADER);
COPY CAREPLANS FROM '/data/careplans.csv' WITH (FORMAT CSV, HEADER);
COPY CLAIMS FROM '/data/claims.csv' WITH (FORMAT CSV, HEADER);
--COPY CLAIMS_TRANSACTIONS FROM '/data/claims_transactions.csv' WITH (FORMAT CSV, HEADER);
COPY CONDITIONS FROM '/data/conditions.csv' WITH (FORMAT CSV, HEADER);
COPY DEVICES FROM '/data/devices.csv' WITH (FORMAT CSV, HEADER);
COPY IMAGING_STUDIES FROM '/data/imaging_studies.csv' WITH (FORMAT CSV, HEADER);
COPY IMMUNIZATIONS FROM '/data/immunizations.csv' WITH (FORMAT CSV, HEADER);
COPY MEDICATIONS FROM '/data/medications.csv' WITH (FORMAT CSV, HEADER);
COPY OBSERVATIONS FROM '/data/observations.csv' WITH (FORMAT CSV, HEADER);
COPY PROCEDURES FROM '/data/procedures.csv' WITH (FORMAT CSV, HEADER);
COPY SUPPLIES FROM '/data/supplies.csv' WITH (FORMAT CSV, HEADER);

COMMIT;