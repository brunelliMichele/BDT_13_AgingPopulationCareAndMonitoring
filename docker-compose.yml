services:
    db:
        image: postgres:14.5
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_DB: medicalData
        ports: 
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
            - ./postgres/init:/docker-entrypoint-initdb.d
            - ./postgres/data:/data
        restart: always
    
    kafka:
        image: confluentinc/cp-kafka:7.6.0
        ports:
            - "9092:9092"
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        restart: always
    
    data_injector:
        build: ./kafka
        depends_on:
            - kafka
        command: python3 Data_generator.py
        restart: always

    zookeeper:
        image: confluentinc/cp-zookeeper:7.6.0
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        restart: always

    spark:
        build: ./spark
        depends_on:
            - kafka
        volumes:
            - ./spark:/spark
            - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
        command: >
                bash -c "sleep 10 &&
                /opt/bitnami/spark/bin/spark-submit
                --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0
                /spark/spark_stream.py"
        restart: always

    flask_web:
        build: ./flask_app
        ports:
            - "8000:8000"
        volumes:
            - ./flask_app:/app
        depends_on:
            - kafka
            - db
        restart: always    
volumes:
    pgdata:

networks:
    default:
        name: bdt_network