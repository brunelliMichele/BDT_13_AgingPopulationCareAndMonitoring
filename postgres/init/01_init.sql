BEGIN;

CREATE TABLE IF NOT EXISTS ORGANIZATIONS (
    ID UUID PRIMARY KEY,
    NAME VARCHAR NOT NULL,
    ADDRESS VARCHAR NOT NULL,
    CITY VARCHAR NOT NULL,
    STATE VARCHAR,
    ZIP VARCHAR,
    LAT NUMERIC,
    LON NUMERIC,
    PHONE VARCHAR,
    REVENUE NUMERIC NOT NULL,
    UTILIZATION NUMERIC NOT NULL
);

-- Create tables
CREATE TABLE IF NOT EXISTS PATIENTS (
    ID UUID PRIMARY KEY,
    BIRTHDATE DATE NOT NULL,
    DEATHDATE DATE,
    SSN VARCHAR NOT NULL,
    DRIVERS VARCHAR,
    PASSPORT VARCHAR,
    PREFIX VARCHAR,
    FIRST VARCHAR NOT NULL,
    MIDDLE VARCHAR,
    LAST VARCHAR NOT NULL,
    SUFFIX VARCHAR,
    MAIDEN VARCHAR,
    MARITAL VARCHAR,
    RACE VARCHAR NOT NULL,
    ETHNICITY VARCHAR NOT NULL,
    GENDER VARCHAR NOT NULL,
    BIRTHPLACE VARCHAR NOT NULL,
    ADDRESS VARCHAR NOT NULL,
    CITY VARCHAR NOT NULL,
    STATE VARCHAR NOT NULL,
    COUNTY VARCHAR,
    FIPS_COUNTY_CODE VARCHAR,
    ZIP VARCHAR,
    LAT NUMERIC,
    LON NUMERIC,
    HEALTHCARE_EXPENSES NUMERIC NOT NULL,
    HEALTHCARE_COVERAGE NUMERIC NOT NULL,
    INCOME NUMERIC NOT NULL
);

CREATE TABLE IF NOT EXISTS PROVIDERS (
    ID UUID PRIMARY KEY,
    ORGANIZATION UUID NOT NULL REFERENCES ORGANIZATIONS(ID),
    NAME VARCHAR NOT NULL,
    GENDER VARCHAR NOT NULL,
    SPECIALITY VARCHAR NOT NULL,
    ADDRESS VARCHAR NOT NULL,
    CITY VARCHAR NOT NULL,
    STATE VARCHAR,
    ZIP VARCHAR,
    LAT NUMERIC,
    LON NUMERIC,
    ENCOUNTERS NUMERIC NOT NULL,
    PROCEDURES NUMERIC NOT NULL
);

CREATE TABLE IF NOT EXISTS PAYERS (
    ID UUID PRIMARY KEY,
    NAME VARCHAR NOT NULL,
    OWNERSHIP VARCHAR,
    ADDRESS VARCHAR,
    CITY VARCHAR,
    STATE_HEADQUARTERED VARCHAR,
    ZIP VARCHAR,
    PHONE VARCHAR,
    AMOUNT_COVERED NUMERIC NOT NULL,
    AMOUNT_UNCOVERED NUMERIC NOT NULL,
    REVENUE NUMERIC NOT NULL,
    COVERED_ENCOUNTERS NUMERIC NOT NULL,
    UNCOVERED_ENCOUNTERS NUMERIC NOT NULL,
    COVERED_MEDICATIONS NUMERIC NOT NULL,
    UNCOVERED_MEDICATIONS NUMERIC NOT NULL,
    COVERED_PROCEDURES NUMERIC NOT NULL,
    UNCOVERED_PROCEDURES NUMERIC NOT NULL,
    COVERED_IMMUNIZATIONS NUMERIC NOT NULL,
    UNCOVERED_IMMUNIZATIONS NUMERIC NOT NULL,
    UNIQUE_CUSTOMERS NUMERIC NOT NULL,
    QOLS_AVG NUMERIC NOT NULL,
    MEMBER_MONTHS NUMERIC NOT NULL
);

CREATE TABLE IF NOT EXISTS ENCOUNTERS (
    ID UUID PRIMARY KEY,
    START TIMESTAMP NOT NULL,
    STOP TIMESTAMP,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ORGANIZATION UUID NOT NULL REFERENCES ORGANIZATIONS(ID),
    PROVIDER UUID NOT NULL REFERENCES PROVIDERS(ID),
    PAYER UUID NOT NULL REFERENCES PAYERS(ID),
    ENCOUNTERCLASS VARCHAR NOT NULL,
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    BASE_ENCOUNTER_COST NUMERIC NOT NULL,
    TOTAL_CLAIM_COST NUMERIC NOT NULL,
    PAYER_COVERAGE NUMERIC NOT NULL,
    REASONCODE VARCHAR,
    REASONDESCRIPTION VARCHAR
);

-- Tables without explicit primary keys (PKs may need to be added in practice)
CREATE TABLE IF NOT EXISTS ALLERGIES (
    START DATE NOT NULL,
    STOP DATE,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    SYSTEM VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    TYPE VARCHAR,
    CATEGORY VARCHAR,
    REACTION1 VARCHAR,
    DESCRIPTION1 VARCHAR,
    SEVERITY1 VARCHAR,
    REACTION2 VARCHAR,
    DESCRIPTION2 VARCHAR,
    SEVERITY2 VARCHAR
);

CREATE TABLE IF NOT EXISTS CAREPLANS (
    ID UUID PRIMARY KEY,
    START DATE NOT NULL,
    STOP DATE,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    REASONCODE VARCHAR,
    REASONDESCRIPTION VARCHAR
);

CREATE TABLE IF NOT EXISTS CLAIMS (
    ID UUID PRIMARY KEY,
    PATIENT_ID UUID NOT NULL REFERENCES PATIENTS(ID),
    PROVIDER_ID UUID NOT NULL REFERENCES PROVIDERS(ID),
    PRIMARY_PATIENT_INSURANCE_ID UUID REFERENCES PAYERS(ID),
    SECONDARY_PATIENT_INSURANCE_ID UUID REFERENCES PAYERS(ID),
    DEPARTMENT_ID NUMERIC NOT NULL,
    PATIENT_DEPARTMENT_ID NUMERIC NOT NULL,
    DIAGNOSIS1 VARCHAR,
    DIAGNOSIS2 VARCHAR,
    DIAGNOSIS3 VARCHAR,
    DIAGNOSIS4 VARCHAR,
    DIAGNOSIS5 VARCHAR,
    DIAGNOSIS6 VARCHAR,
    DIAGNOSIS7 VARCHAR,
    DIAGNOSIS8 VARCHAR,
    REFERRING_PROVIDER_ID UUID REFERENCES PROVIDERS(ID),
    APPOINTMENT_ID UUID REFERENCES ENCOUNTERS(ID),
    CURRENT_ILLNESS_DATE TIMESTAMP NOT NULL,
    SERVICE_DATE TIMESTAMP NOT NULL,
    SUPERVISING_PROVIDER_ID UUID REFERENCES PROVIDERS(ID),
    STATUS1 VARCHAR,
    STATUS2 VARCHAR,
    STATUSP VARCHAR,
    OUTSTANDING1 NUMERIC,
    OUTSTANDING2 NUMERIC,
    OUTSTANDINGP NUMERIC,
    LASTBILLEDDATE1 TIMESTAMP,
    LASTBILLEDDATE2 TIMESTAMP,
    LASTBILLEDDATEP TIMESTAMP,
    HEALTHCARECLAIMTYPEID1 NUMERIC,
    HEALTHCARECLAIMTYPEID2 NUMERIC
);

CREATE TABLE IF NOT EXISTS CONDITIONS (
    START DATE NOT NULL,
    STOP DATE,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    SYSTEM VARCHAR NOT NULL,
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS DEVICES (
    START TIMESTAMP NOT NULL,
    STOP TIMESTAMP,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    UDI VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS IMAGING_STUDIES (
    ID UUID NOT NULL,
    DATE TIMESTAMP NOT NULL,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    SERIES_UID VARCHAR NOT NULL,
    BODY_SITE_CODE VARCHAR NOT NULL,
    BODY_SITE_DESCRIPTION VARCHAR NOT NULL,
    MODALITY_CODE VARCHAR NOT NULL,
    MODALITY_DESCRIPTION VARCHAR NOT NULL,
    INSTANCE_UID VARCHAR NOT NULL,
    SOP_CODE VARCHAR NOT NULL,
    SOP_DESCRIPTION VARCHAR NOT NULL,
    PROCEDURE_CODE VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS IMMUNIZATIONS (
    DATE TIMESTAMP NOT NULL,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    COST NUMERIC NOT NULL
);

CREATE TABLE IF NOT EXISTS MEDICATIONS (
    START TIMESTAMP NOT NULL,
    STOP TIMESTAMP,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    PAYER UUID NOT NULL REFERENCES PAYERS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    BASE_COST NUMERIC NOT NULL,
    PAYER_COVERAGE NUMERIC NOT NULL,
    DISPENSES NUMERIC NOT NULL,
    TOTALCOST NUMERIC NOT NULL,
    REASONCODE VARCHAR,
    REASONDESCRIPTION VARCHAR
);

CREATE TABLE IF NOT EXISTS OBSERVATIONS (
    DATE TIMESTAMP NOT NULL,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID REFERENCES ENCOUNTERS(ID),
    CATEGORY VARCHAR,
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    VALUE VARCHAR NOT NULL,
    UNITS VARCHAR,
    TYPE VARCHAR NOT NULL
);



CREATE TABLE IF NOT EXISTS PROCEDURES (
    START TIMESTAMP NOT NULL,
    STOP TIMESTAMP,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    SYSTEM VARCHAR NOT NULL,
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    BASE_COST NUMERIC NOT NULL,
    REASONCODE VARCHAR,
    REASONDESCRIPTION VARCHAR
);

CREATE TABLE IF NOT EXISTS SUPPLIES (
    DATE DATE NOT NULL,
    PATIENT UUID NOT NULL REFERENCES PATIENTS(ID),
    ENCOUNTER UUID NOT NULL REFERENCES ENCOUNTERS(ID),
    CODE VARCHAR NOT NULL,
    DESCRIPTION VARCHAR NOT NULL,
    QUANTITY NUMERIC NOT NULL
);

CREATE TABLE IF NOT EXISTS alerts (
    id SERIAL PRIMARY KEY,
    patient_id UUID REFERENCES patients(id) ON DELETE CASCADE,
    alert_type TEXT NOT NULL,
    room TEXT,
    message TEXT NOT NULL,
    timestamp TIMESTAMP NOT NULL
);

COMMIT;